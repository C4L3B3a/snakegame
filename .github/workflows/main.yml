# ==========================================================
# SnakeGame Developer Kit - Universal Build Workflow
# ----------------------------------------------------------
# Builds SnakeGame for:
#   - Windows (x64, x86) via PyInstaller
#   - macOS (x64, ARM64) via PyInstaller
#   - Linux (.deb, .rpm, .tar.gz, ARM64)
# Optional: Snap/Flatpak (manual publishing)
# Notes:
#   - Windows x32 requires a Python x32 installation
#   - macOS builds require Mac runners (GitHub-hosted)
#   - ARM builds may require cross-compilation or ARM runners
# ==========================================================

name: SnakeGame Universal Builder

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# ==========================================================
# WINDOWS BUILDS
# ==========================================================
jobs:
  build-windows:
    name: Build Windows (${{ matrix.arch }})
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ "x64", "x86" ]  # x64 (most common), x86 (older / optional)

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: ${{ matrix.arch }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Executable
        run: pyinstaller --onefile --windowed snakegame.py --name SnakeGame_${{ matrix.arch }}
      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: snakegame-windows-${{ matrix.arch }}
          path: dist/SnakeGame_${{ matrix.arch }}.exe

# ==========================================================
# macOS BUILDS
# ==========================================================
  build-macos:
    name: Build macOS (${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [ "x64", "arm64" ]  # Intel & Apple Silicon

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build macOS Executable
        run: pyinstaller --onefile --windowed snakegame.py --name SnakeGame_mac_${{ matrix.arch }}
      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: snakegame-macos-${{ matrix.arch }}
          path: dist/SnakeGame_mac_${{ matrix.arch }}

# ==========================================================
# LINUX BUILDS
# ==========================================================
  build-linux:
    name: Build Linux Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ "x86_64", "arm64" ]  # Intel/AMD & ARM (e.g., Raspberry Pi)

    steps:
      - uses: actions/checkout@v4
      - name: Setup environment
        run: |
          sudo apt update
          sudo apt install -y python3 python3-setuptools python3-all fakeroot dpkg-dev rpm tar
          pip install -r requirements.txt
      - name: Build .deb package
        run: |
          mkdir -p build/DEBIAN build/usr/local/bin build/usr/share/doc/snakegame
          cp snakegame.py build/usr/local/bin/snakegame
          chmod +x build/usr/local/bin/snakegame
          cat <<EOF > build/DEBIAN/control
          Package: snakegame
          Version: 1.0.0
          Section: games
          Priority: optional
          Architecture: ${{ matrix.arch }}
          Depends: python3
          Maintainer: C4L <contact@example.com>
          Description: SnakeGame Developer Kit
           Python-based developer toolkit for creating games with telemetry, updater, and support portal.
          EOF
          dpkg-deb --build build snakegame_1.0.0_${{ matrix.arch }}.deb
      - name: Build .rpm package
        run: |
          mkdir -p rpm/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          mkdir -p rpm/SOURCES/snakegame-1.0.0
          cp snakegame.py rpm/SOURCES/snakegame-1.0.0/
          tar czvf rpm/SOURCES/snakegame-1.0.0.tar.gz -C rpm/SOURCES snakegame-1.0.0
          cat <<EOF > rpm/SPECS/snakegame.spec
          Name: snakegame
          Version: 1.0.0
          Release: 1%{?dist}
          Summary: SnakeGame Developer Kit
          License: MIT
          Group: Games/Arcade
          BuildArch: noarch
          Requires: python3

          %description
          Python developer toolkit with telemetry, updater, and support portal.

          %install
          mkdir -p %{buildroot}/usr/local/bin
          cp %{_sourcedir}/snakegame.py %{buildroot}/usr/local/bin/snakegame
          chmod +x %{buildroot}/usr/local/bin/snakegame

          %files
          /usr/local/bin/snakegame
          EOF
          rpmbuild --define "_topdir $(pwd)/rpm" -bb rpm/SPECS/snakegame.spec
      - name: Build .tar.gz archive
        run: |
          mkdir -p tarball/snakegame
          cp snakegame.py tarball/snakegame/
          if [ -d "support_portal" ]; then cp -r support_portal tarball/snakegame/; fi
          tar czf snakegame_1.0.0_${{ matrix.arch }}.tar.gz -C tarball snakegame
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snakegame-linux-${{ matrix.arch }}
          path: |
            snakegame_1.0.0_${{ matrix.arch }}.deb
            rpm/RPMS/noarch/*.rpm
            snakegame_1.0.0_${{ matrix.arch }}.tar.gz

# ==========================================================
# Snap build (optional)
# ==========================================================
  build-snap:
    name: Build Snap package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Snapcraft
        run: sudo snap install snapcraft --classic
      - name: Build Snap
        run: snapcraft pack
      - uses: actions/upload-artifact@v4
        with:
          name: snakegame-snap
          path: ./*.snap

# ==========================================================
# Flatpak build (optional)
# ==========================================================
  build-flatpak:
    name: Build Flatpak package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Flatpak tools
        run: sudo apt install -y flatpak flatpak-builder
      - name: Build Flatpak
        run: |
          flatpak-builder build-dir snakegame.flatpak.yaml --force-clean
          flatpak build-bundle repo snakegame.flatpak com.c4l.SnakeGame 1.0.0
      - uses: actions/upload-artifact@v4
        with:
          name: snakegame-flatpak
          path: snakegame.flatpak

# By C4L
